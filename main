% Set up the model parameters
n = number of resources
m = number of patients
R = vector of maximum resource capacities
P = cell array of patient flow constraints (i.e. which patients must be treated before each patient)
a = vector of patient acuity levels
Tmax = maximum allowed patient time in the emergency department
C = maximum capacity of the emergency department

% Set up the decision variables
x = binvar(m,n,'full');
y = sdpvar(m,1);
z = sdpvar(m,1);

% Set up the objective function
Objective = sum(z-y);

% Set up the constraints
Constraints = [x >= 0, x <= 1, sum(x,2) <= 1, sum(x,1) <= R, y >= 0, z >= 0];
for i = 1:m
    Constraints = [Constraints, y(i) >= max(z([P{i}],:)) + sum(x(P{i},:)'), z(i) - y(i) <= Tmax];
    if i > 1
        Constraints = [Constraints, y(i) >= y(i-1) + (a(i-1) - a(i))];
    end
end
Constraints = [Constraints, sum(x,1) <= C];

% Solve the linear program
options = sdpsettings('solver','linprog');
sol = optimize(Constraints,Objective,options);

% Display the results
if sol.problem == 0
    fprintf('Optimal objective value: %f\n', value(Objective));
    for i = 1:m
        fprintf('Patient %d: Start Time = %f, End Time = %f\n', i, value(y(i)), value(z(i)));
        for j = 1:n
            if value(x(i,j)) > 0.5
                fprintf('  Resource %d\n', j);
            end
        end
    end
else
    fprintf('Error: %s\n', sol.info);
end
